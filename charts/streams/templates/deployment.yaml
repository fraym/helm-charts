apiVersion: apps/v1
kind: Deployment
metadata:
  name: streams
  namespace: {{ .Release.Namespace }}
  labels:
    app: streams
  annotations:
    secret.reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: streams
  template:
    metadata:
      labels:
        app: streams
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "3000"
        linkerd.io/inject: enabled
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: env
          configMap:
            name: fraeym-streams-env-data
      containers:
        - name: streams
          image: {{ .Values.image }}:v{{ .Values.version }}
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: fraeym-auth-config
            - secretRef:
                name: fraeym-postgres-config
          ports:
            - containerPort: 3000
            - containerPort: 3001
            - containerPort: 9000
          readinessProbe:
            httpGet:
              path: /ready
              port: 3000
            initialDelaySeconds: 1
            periodSeconds: 10
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - name: env
              mountPath: /.env
              subPath: .env
              readOnly: true
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              {{- if .Values.resources.limits.cpu }}
              cpu: {{ .Values.resources.limits.cpu }}
              {{- end }}
